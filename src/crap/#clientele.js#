const { Context } = require('./context.js');
const getAll = io => {
    const next = async () => {
	const socket = await new Promise(res => io.once('connection', res));
	const client = {
	    send: async (channel, message) => {
		const response = await new Promise(res => socket.emit(channel, message, res));
		return response;
	    },
	    receive: async channel => {
		const [message, callback] = await new Promise(res => socket.once(
		    channel,
		    (message, callback) => res([message, callback]),
		));
		return [message, callback];
	    },
	};
	client.id = await client.send('get-id');
	return client;
    };
    const clients = new Context(); clients.onto(async () => {
	while (true) {
	    const client = await next();
	    clients[client.id] = client;
	    clients.map(client => client.id).log();
	}
    });
    return clients;
};
module.exports = {getAll};
